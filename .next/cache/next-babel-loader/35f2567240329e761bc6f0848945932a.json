{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport createCampaign from '../../ethereum/campaign';\nimport { CardGroup, GridColumn, Grid, Button } from 'semantic-ui-react';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from '../../components/ContributeForm';\nimport { Link } from \"../../routes\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = await createCampaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call(); // console.log(summary);\n\n    return {\n      address: props.query.address,\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary['4']\n    };\n  }\n\n  renderCards() {\n    const {\n      minimumContribution,\n      manager,\n      balance,\n      approversCount,\n      requestsCount\n    } = this.props; // console.log(approversCount);\n\n    const items = [{\n      header: manager,\n      meta: 'Address of manager',\n      description: 'The manager created this campaign and can create request to withdraw money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei)',\n      description: 'You must contribute at least this much wei to become an approver'\n    }, {\n      header: requestsCount,\n      meta: 'Number of Requests',\n      description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'\n    }, {\n      header: approversCount,\n      meta: 'Number of Approvers',\n      description: 'Number of people who have already donated to this campaign'\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign Balance (ether)',\n      description: 'The balance is how much money this campaign has left to spend.'\n    }];\n    return __jsx(CardGroup, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h1\", null, \"Campaign show\"), __jsx(Grid, null, __jsx(Grid.Row, null, __jsx(Grid.Column, {\n      width: 10\n    }, this.renderCards()), __jsx(Grid.Column, {\n      width: 6\n    }, __jsx(ContributeForm, {\n      address: this.props.address\n    }))), __jsx(Grid.Row, null, __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"View Requests\")))))));\n  }\n\n}\n\nexport default CampaignShow;","map":null,"metadata":{},"sourceType":"module"}
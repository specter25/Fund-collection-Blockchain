{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport createCampaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value)); // console.log(this.state.minimumContribution);\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function _callee(e) {\n      var campaign, accounts;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(createCampaign(_this.props.address));\n\n            case 3:\n              campaign = _context.sent;\n              _context.prev = 4;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(campaign.methods.contribute().send({\n                from: accounts[0],\n                value: web3.utils.toWei(_this.state.value, 'ether')\n              }));\n\n            case 10:\n              _context.next = 14;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](4);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 12]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(Form, {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        }\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        name: \"value\",\n        label: \"ether\",\n        labelPosition: \"right\",\n        value: this.state.minimumContribution,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        }\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute!\")));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":null,"metadata":{},"sourceType":"module"}